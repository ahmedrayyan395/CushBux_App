"""empty message

Revision ID: b98bcc7c7b18
Revises: 
Create Date: 2025-09-13 10:22:17.837221

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b98bcc7c7b18'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ad_network',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('code', sa.Text(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('admin_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('promo_codes',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('COINS', 'TON_AD_CREDIT', 'SPINS', name='promocodetype'), nullable=False),
    sa.Column('value', sa.Numeric(precision=20, scale=9), nullable=False),
    sa.Column('max_uses', sa.Integer(), nullable=True),
    sa.Column('used_by', sa.JSON(), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('quests',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('icon_name', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('reward', sa.Integer(), nullable=False, comment='Reward in coins'),
    sa.Column('total_progress', sa.Integer(), nullable=False, comment='The goal the user must reach'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('auto_withdrawals', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), autoincrement=False, nullable=False, comment='Corresponds to Telegram ID'),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('coins', sa.BigInteger(), nullable=False),
    sa.Column('ton', sa.Numeric(precision=20, scale=9), nullable=False),
    sa.Column('referral_earnings', sa.BigInteger(), nullable=False),
    sa.Column('spins', sa.Integer(), nullable=False),
    sa.Column('ad_credit', sa.Numeric(precision=12, scale=4), nullable=False),
    sa.Column('ads_watched_today', sa.Integer(), nullable=False),
    sa.Column('tasks_completed_today_for_spin', sa.Integer(), nullable=False),
    sa.Column('friends_invited_today_for_spin', sa.Integer(), nullable=False),
    sa.Column('space_defender_progress', sa.JSON(), nullable=False),
    sa.Column('street_racing_progress', sa.JSON(), nullable=False),
    sa.Column('banned', sa.Boolean(), nullable=True),
    sa.Column('referred_by', sa.BigInteger(), nullable=True),
    sa.Column('referral_count', sa.Integer(), nullable=True),
    sa.Column('total_referral_earnings', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['referred_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('reward', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('ad_network_id', sa.Integer(), nullable=True),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'PAUSED', 'COMPLETED', name='campaignstatus'), nullable=True),
    sa.Column('completions', sa.Integer(), nullable=True),
    sa.Column('task_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ad_network_id'], ['ad_network.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('friendships',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('friend_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'friend_id')
    )
    op.create_table('referrals',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('referrer_id', sa.BigInteger(), nullable=False),
    sa.Column('referred_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('earnings_generated', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['referred_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['referrer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('referrer_id', 'referred_id', name='unique_referral')
    )
    op.create_table('spin_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('prize_type', sa.String(length=20), nullable=False),
    sa.Column('prize_value', sa.Numeric(precision=20, scale=9), nullable=False),
    sa.Column('prize_label', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=20, scale=9), nullable=False),
    sa.Column('transaction_type', sa.Enum('WITHDRAWAL', 'DEPOSIT', name='transactiontype'), nullable=False),
    sa.Column('currency', sa.Enum('TON', 'COINS', name='transactioncurrency'), nullable=False),
    sa.Column('status', sa.Enum('COMPLETED', 'PENDING', 'FAILED', name='transactionstatus'), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_campaigns',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('creator_id', sa.BigInteger(), nullable=False),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('langs', sa.JSON(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'PAUSED', 'COMPLETED', name='campaignstatus'), nullable=True),
    sa.Column('completions', sa.Integer(), nullable=True),
    sa.Column('goal', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=12, scale=4), nullable=False),
    sa.Column('category', sa.Enum('DAILY', 'GAME', 'SOCIAL', 'PARTNER', name='taskcategory'), nullable=False),
    sa.Column('check_subscription', sa.Boolean(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_game_progress',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('game_id', sa.String(length=100), nullable=False),
    sa.Column('current_level', sa.Integer(), nullable=True),
    sa.Column('max_level_reached', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_game_progress', schema=None) as batch_op:
        batch_op.create_index('idx_user_game', ['user_id', 'game_id'], unique=False)

    op.create_table('user_quest_progress',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('quest_id', sa.String(), nullable=False),
    sa.Column('current_progress', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'quest_id')
    )
    op.create_table('level_completions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('required_level', sa.Integer(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['user_campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('partner_campaigns',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('required_level', sa.Integer(), nullable=False),
    sa.Column('webhook_token', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user_campaigns.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('webhook_token')
    )
    op.create_table('user_daily_task_completions',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('task_id', sa.String(), nullable=False),
    sa.Column('started_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('claimed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['daily_tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'task_id')
    )
    op.create_table('user_task_completions',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('campaign_id', sa.BigInteger(), nullable=False),
    sa.Column('started_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['user_campaigns.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'campaign_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_task_completions')
    op.drop_table('user_daily_task_completions')
    op.drop_table('partner_campaigns')
    op.drop_table('level_completions')
    op.drop_table('user_quest_progress')
    with op.batch_alter_table('user_game_progress', schema=None) as batch_op:
        batch_op.drop_index('idx_user_game')

    op.drop_table('user_game_progress')
    op.drop_table('user_campaigns')
    op.drop_table('transactions')
    op.drop_table('spin_history')
    op.drop_table('referrals')
    op.drop_table('friendships')
    op.drop_table('daily_tasks')
    op.drop_table('users')
    op.drop_table('settings')
    op.drop_table('quests')
    op.drop_table('promo_codes')
    op.drop_table('admin_users')
    op.drop_table('ad_network')
    # ### end Alembic commands ###
